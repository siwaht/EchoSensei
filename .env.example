# ==============================================
# EchoSensei Platform Configuration
# ==============================================
# Platform-agnostic environment variables for deployment
# on Replit, AWS, GCP, Azure, or any other platform.
#
# Copy this file to .env and fill in your values:
#   cp .env.example .env
#
# IMPORTANT: Never commit .env to version control!
# ==============================================

# ----------------------------------------------
# Environment & Server
# ----------------------------------------------

# Environment: development, production, staging
NODE_ENV=development

# Server host and port
# - Use 0.0.0.0 to listen on all interfaces
# - Use localhost or 127.0.0.1 for local only
HOST=0.0.0.0
PORT=5000

# Public URL for webhooks and external links
# This is the URL where your app is accessible from the internet
# Examples:
#   https://your-app.replit.app
#   https://api.yourdomain.com
#   https://your-elb-12345.us-east-1.elb.amazonaws.com
PUBLIC_URL=http://localhost:5000

# Base domain for white-label subdomain routing (optional)
# Example: yourdomain.com (subdomain.yourdomain.com will work)
BASE_DOMAIN=

# ----------------------------------------------
# Security & Authentication
# ----------------------------------------------

# Session secret for cookie signing (REQUIRED, min 32 characters)
# Generate with: openssl rand -base64 32
SESSION_SECRET=

# Encryption key for sensitive data (REQUIRED, min 32 characters)
# Generate with: openssl rand -base64 32
ENCRYPTION_KEY=

# Trust proxy (required for load balancers, reverse proxies)
# Set to 'true' in production behind load balancer/reverse proxy
TRUST_PROXY=false

# ----------------------------------------------
# Database
# ----------------------------------------------

# PostgreSQL connection string (REQUIRED)
# Format: postgresql://user:password@host:port/database
# Examples:
#   Local: postgresql://postgres:password@localhost:5432/echosensei
#   Neon: postgresql://user:pass@ep-xxx.us-east-2.aws.neon.tech/neondb?sslmode=require
#   RDS: postgresql://user:pass@mydb.abc123.us-east-1.rds.amazonaws.com:5432/echosensei
DATABASE_URL=

# Enable SSL for database connections (auto-enabled in production)
DATABASE_SSL=false

# Maximum database connection pool size
DATABASE_MAX_CONNECTIONS=20

# ----------------------------------------------
# Storage Provider
# ----------------------------------------------

# Storage provider: local, s3, gcs, azure
# - local: Store files on local filesystem (development/single-server)
# - s3: AWS S3 (recommended for AWS deployments)
# - gcs: Google Cloud Storage (recommended for GCP deployments)
# - azure: Azure Blob Storage (recommended for Azure deployments)
STORAGE_PROVIDER=local

# Local storage directories (used when STORAGE_PROVIDER=local)
UPLOAD_DIR=uploads
AUDIO_DIR=audio-storage

# ----------------------------------------------
# AWS S3 Storage (when STORAGE_PROVIDER=s3)
# ----------------------------------------------

# S3 bucket name
S3_BUCKET=

# AWS region (e.g., us-east-1, eu-west-1)
S3_REGION=us-east-1

# AWS credentials (use IAM roles in production when possible)
S3_ACCESS_KEY_ID=
S3_SECRET_ACCESS_KEY=

# ----------------------------------------------
# Google Cloud Storage (when STORAGE_PROVIDER=gcs)
# ----------------------------------------------

# GCS bucket name
GCS_BUCKET=

# GCP project ID
GCS_PROJECT_ID=

# Path to service account key file
GCS_KEY_FILE_PATH=

# ----------------------------------------------
# Azure Blob Storage (when STORAGE_PROVIDER=azure)
# ----------------------------------------------

# Azure storage account name
AZURE_STORAGE_ACCOUNT_NAME=

# Azure storage account key
AZURE_STORAGE_ACCOUNT_KEY=

# Azure container name
AZURE_STORAGE_CONTAINER_NAME=

# ----------------------------------------------
# External Integrations
# ----------------------------------------------

# ElevenLabs API Key (for voice AI)
ELEVENLABS_API_KEY=

# Mistral AI API Key (for call summaries)
MISTRAL_API_KEY=

# Stripe (for payments)
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# SendGrid (for emails)
SENDGRID_API_KEY=

# Google Cloud (for additional services)
GOOGLE_CLOUD_PROJECT=
GOOGLE_APPLICATION_CREDENTIALS=

# ----------------------------------------------
# Deployment Platform Specific
# ----------------------------------------------

# Replit-specific (auto-detected)
# REPL_ID=
# REPLIT_DOMAINS=

# AWS-specific
# AWS_REGION=us-east-1
# AWS_EXECUTION_ENV=AWS_ECS_FARGATE

# GCP-specific  
# GOOGLE_CLOUD_PROJECT=
# K_SERVICE=
# K_REVISION=

# Azure-specific
# WEBSITE_SITE_NAME=
# APPSETTING_WEBSITE_SITE_NAME=

# ----------------------------------------------
# Health Check & Monitoring
# ----------------------------------------------

# Health check endpoint is automatically available at /health
# Configure your platform's health check to use this endpoint

# ----------------------------------------------
# Platform Deployment Notes
# ----------------------------------------------

# AWS ECS/Fargate:
# - Use AWS Secrets Manager for secrets
# - Use IAM roles instead of access keys
# - Set DATABASE_SSL=true for RDS
# - Set TRUST_PROXY=true behind ALB
# - Use S3 for storage (STORAGE_PROVIDER=s3)

# Google Cloud Run:
# - Use Secret Manager for secrets
# - Use service account for authentication
# - Set DATABASE_SSL=true for Cloud SQL
# - Set TRUST_PROXY=true
# - Use GCS for storage (STORAGE_PROVIDER=gcs)

# Azure App Service:
# - Use Azure Key Vault for secrets
# - Use Managed Identity for authentication
# - Set DATABASE_SSL=true for Azure Database
# - Set TRUST_PROXY=true
# - Use Azure Blob for storage (STORAGE_PROVIDER=azure)

# Replit:
# - Use Secrets tab in Replit UI
# - Database and port are auto-configured
# - Use local storage (STORAGE_PROVIDER=local)
